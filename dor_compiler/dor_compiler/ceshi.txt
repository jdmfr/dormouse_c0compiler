ConSt int glob_con1 = +000100,glob_con2 = -0020;
CONst int glob_con3 = 002,glob_con4 = -002;
const char glob_con_char1 = 'a',glob_con_char2 = 'b'; 
int glob_var1 ,gloB_VAR2,glob_var_arr1[00010];
char glob_char_arr1[0020],glob_char_arr2[0010];

void Test_Upper_And_Lower
{
	
	printf("******* In The Test_Upper_And_Lower ********\n");

	printf("GLOBAL const glob_Con1 = ",GLOb_con1);
	printf("GLOBAL const glob_cOn2 = ",GLOB_CON2);
	printf("GLOBAL const char1 = ",GLOB_CON_CHAR1);
	printf("GLOBAL const char2 = ",GLOB_CON_CHAR2);
	printf("******* End The Test_Upper_And_Lower *********\n");
}

void Test_char
{
	char a,b;
	char c[10];
	int i;
	i=1;
	printf("******** In The Test_char *********\n");
	do{
	glob_char_arr1[(2/2-1+0)*1+i] = 'b';
	i = i+1;
	}while(i<=10)
	a = glob_con_char1;
	b = glob_con_char2;
	i = b-a;
	printf("glob_con_char1 + glob_con_char2 = ",i);
	i = b+a;
	printf("glob_con_char1 + glob_con_char2 = ",i);
	i = 1;
	do{
	printf(glob_char_arr1[i+1]);
	i = i*2;

	}while(i<=10+0)
	printf("***** End The Test_char *******\n");


}

void Test_EXPR
{
	int a,b,d;
	char c1,c2,c3,c4;
	char c;
	printf("***** In the TEST_EXPR ********\n");
	c1 = 'a';
	c2 = 'b';
	c3 = 'A';
	c4 = 'B';
	c = c1;
	printf("c = c1:",c);
	d = c1+1;
	printf("d = c1 +1 :",d);
	d = c1 - c3;
	printf("d = c1 - c3 : ",d);
	d = c2 - c4;
	printf("d = c2 - c4 : ",d);
	a = -009;
	b = +003;
	d = b-a + a*b - glob_char_arr1[1]*2 - a/b;
	printf("*** d is ***: ",d);
	printf("******** END The TEST_EXPR **********\n");
}

int TEST_IF(int a,int b)
{
	
	int c,d;
	printf("******** In the TEST_IF *********\n");
	if(a>b)
		{printf("A is Bigger than B.\n");
		if(a>10)
		{
			printf("A is too BIG.\n");
			return(-1);
			}
		else{
			printf("A is not too BIG.\n");
			return(1);
			}
	}
	else{
		printf("A is Smaller than B.");
		if(B < 2)
		{
			printf("B is Too Small.\n");
			return(-1);
		}
		else{
			printf("B is not TOO SMALL.\n");
			return(0);
		}
	}

}


char Test_RET_Char(char a,int b)
{
	int k;
	char c;
	printf("******** In The Test_RET_CHAR *******\n");
	if(b == 0)
	{
		printf("******** RETURN THE ORIGINAL END The TEST_RET_CHAR ********\n");
			return(a);
	}
	else{
		printf("******** RETURN O END THE TEST_RET_CHAR *********\n");
		return('O');
	}
}


int TEST_SWITCH(int a)
{
	int b;
	printf("******* IN THE TEST_SWITCH *******\n");
	switch(a*1-1+9/9){
		case 1:{
			printf("CASE 1.\n");
			b = a;
		}
		case 2:{
			printf("CASE 2.\n");
			b = a*2;
			if(b>3)return(0);
			else {{{{;}}}}
		}
		default :{
			printf("CASE NONE.\n");
		}

	}
	printf("*******8 END THE TEST_SWITCH ********\n");
	return(b);
}

int MAX3(int a,int b,int c)
{
	int r;
	printf("******* IN THE MAX3 ********\n");
	if(a>=b)
	{
		if(a>=c)
			r =a;
		else
			r = c;
	}
	else{
		if(b>= c)
			r = b;
		else
			r = c;
	}
	printf("******* END THE MAX3 ********\n");
	return (r);

}

int FIB(int n)
{
	if(n == 1)
		return(1);
	else
		return (n+FIb(n-1));

}

void main()
{

	int i,j,k,r;
	char c1,c2,c3;
	int arr[100];
	arr[1] = 1;
	arr[1*2] = 0002;
	arr[3-3/3+1] = -000;
	c1 = 'a';
	printf("******* WELCOME TO MAIN ******\n");
	Test_Upper_And_LowEr;
	TEST_CHAR;
	TEst_Expr;
	scanf(i,j);
	k=TEST_IF(i,j);
	printf("After the test_if,The result is : ",k);
	c2 = TEST_RET_CHAR(c1,0);
	printf("c2 is : ",c2);

	c3 = TEST_RET_CHAR('F',2);
	printf("c3 is : ",c3);
	scanf(c2);
	c3 = TEST_RET_CHAR(c2,0);
	printf("c3 is : ",c3);

	scanf(k);
	r=TEST_SWITCH(K);
	printf("r is : ",r);

	r = MAX3(arr[1],arr[2],arr[3]);

	printf("r is : ",r);

	r = MAX3('a'+1,MAX3(1,2,3),FIB(18));
	printf("Recursion function result : ",r);

	r = FIB(FIB(5));
	printf("FIB(FIB(5)) = ",r);
	printf("****** CONGRATUATION END THE MANI *********\n");



}
